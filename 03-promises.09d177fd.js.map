{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,GACrB,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,kBAAUP,UAEpBG,EAAO,CAAEI,kBAAUP,S,GAEpBA,E,IAIP,IAAMQ,EAAOC,SAASC,cAAc,SAEpCF,EAAKG,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEaC,SAASN,EAAKO,SAAgB,MAAEC,OACjCF,SAASN,EAAKO,SAAe,KAAEC,OAGjD,IAJA,IAEMC,EAASH,SAASN,EAAKO,SAAiB,OAAEC,OAEvCE,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/BnB,EAAcmB,EAAI,GACfC,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUP,EAAKoB,EAALpB,MACjBqB,EAAAxB,GAASyB,OAAOC,QACd,uBAAwCC,OAAfjB,EAAS,QAAYiB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGb,EAAQa,EAARb,SAAUP,EAAKoB,EAALpB,MAClBqB,EAAAxB,GAASyB,OAAOI,QACd,sBAAqCF,OAAfjB,EAAS,QAAYiB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', function (event) {\n  event.preventDefault();\n\n  const firstDelay = parseInt(form.elements['delay'].value);\n  const delayStep = parseInt(form.elements['step'].value);\n  const amount = parseInt(form.elements['amount'].value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = firstDelay + i * delayStep;\n\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","Math","random","position","$ce04d3a99e08e73b$var$form","document","querySelector","addEventListener","event","preventDefault","parseInt","elements","value","amount","i","then","param","$parcel$interopDefault","Notify","Success","concat","catch","Failure"],"version":3,"file":"03-promises.09d177fd.js.map"}